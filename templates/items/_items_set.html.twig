<div class="mb-3">
    <label class="form-label">{{ "Item-Type"|trans }}</label>
    <select type="text" class="form-select" id="select-people" name="itemType" value="{{ editMode ? product.getItemType() : '' }}">
        <option value="">-Select-</option>
        {% for item in dropdownFields %}
            {% for key, value in item %}
                {% if key == 'itemType' %}
                    {% for type in value %}
                        <option value="{{ type }}" {{ editMode and product.getItemType() and product.getItemType() == type ? 'selected' : '' }}>{{ type }}</option>
                        {# <li>{{ product }}</li>  Displays 'Test Data', 'testFromTemplate', 'Test Item' #}
                    {% endfor %}
                {% endif %}
            {% endfor %}
        {% endfor %}
        {# <option value="3">Default Item</option>
        <option value="3">Component Item</option>
        <option value="3">Item-Set</option> #}
    </select>
</div>

<div class="col-12 item-set-block">

    <div class="card">
        <div class="card-header">
            <h3 class="card-title">{{ "Items in set"|trans }}</h3>
        </div>

        <div class="item-set list-group list-group-flush list-group-hoverable">
            {% if product and product.getComponents() is defined and product.getComponents() is not empty %}
                {% for cp in product.getComponents() %}
                    <div class="list-group-item">
                        <div class="row align-items-center">
                            <div class="col-auto">
                                <a href="#" target="_blank">
                                    <span class="avatar" style="background-image: url({{ cp.images and cp.images.getItems()|length > 0 ? cp.images.getItems()[0].getImage().getFullPath() : '/misc/img/dev-item.jpg' }})"></span>
                                </a>
                            </div>
                            <div class="col text-truncate">
                                <a href="#" class="product-name text-reset d-block">{{ cp.Itemname }}</a>
                                <div class="product-description d-block text-secondary text-truncate mt-n1">
                                    {{ cp.shortDescription }}<br/>
                                </div>
                            </div>
                            <div class="col-auto">
                                <a href="#" class="list-group-item-actions">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="icon text-secondary" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                        <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                        <path d="M12 17.75l-6.172 3.245l1.179 -6.873l-5 -4.867l6.9 -1l3.086 -6.253l3.086 6.253l6.9 1l-5 4.867l1.179 6.873z"></path>
                                    </svg>
                                </a>
                            </div>
                            <div class="col-auto">
                                <a class="delete-product">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-trash">
                                        <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                                        <path d="M4 7l16 0"/>
                                        <path d="M10 11l0 6"/>
                                        <path d="M14 11l0 6"/>
                                        <path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12"/>
                                        <path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3"/>
                                    </svg>
                                </a>
                            </div>
                        </div>
                        {# Hidden input so that the compatible product's ID is submitted with the form #}
                        <input type="hidden" name="components[]" value="{{ cp.getId() }}">
                    </div>
                {% endfor %}
            {% endif %}
        </div>

        <div class="list-group list-group-flush list-group-hoverable mt-3">
            <div class="list-group-item">
                <div class="row align-items-center">
                    <label class="form-label">{{ "Add item to set"|trans }}</label>
                    <select type="text" class="form-select" id="select-item" value="">
                        <option value="">-Select-</option>
                        {% for item in dropdownFields %}
                            {% for key, value in item %}
                                {% if key == 'Product' %}
                                    {% for prod in value %}
                                        {% for id, name in prod %}
                                            {% if not editMode or (product is defined and product.getId() != id) %}
                                                <option value="{{ id }}">{{ name }}</option>
                                            {% endif %}
                                        {% endfor %}
                                    {% endfor %}
                                {% endif %}
                            {% endfor %}
                        {% endfor %}
                        {# <option value="3" data-custom-properties="&lt;span class=&quot;avatar avatar-xs&quot; style=&quot;background-image: url(/misc/img/dev-item.jpg)&quot;&gt;&lt;/span&gt;">Mallory Hulme</option>
                        <option value="4" data-custom-properties="&lt;span class=&quot;avatar avatar-xs&quot; style=&quot;background-image: url(/misc/img/dev-item.jpg)&quot;&gt;&lt;/span&gt;">Dunn Slane</option>
                        <option value="17" data-custom-properties="&lt;span class=&quot;avatar avatar-xs&quot; style=&quot;background-image: url(/misc/img/dev-item.jpg)&quot;&gt;&lt;/span&gt;">Dyann Escala</option>
                        <option value="18" data-custom-properties="&lt;span class=&quot;avatar avatar-xs&quot; style=&quot;background-image: url(/misc/img/dev-item.jpg)&quot;&gt;&lt;/span&gt;">Avivah Mugleston</option>
                        <option value="19" data-custom-properties="&lt;span class=&quot;avatar avatar-xs&quot;&gt;AA&lt;/span&gt;">Arlie Armstead</option>
                        <option value="20" data-custom-properties="&lt;span class=&quot;avatar avatar-xs&quot; style=&quot;background-image: url(/misc/img/dev-item.jpg)&quot;&gt;&lt;/span&gt;">Tessie Curzon</option> #}
                    </select>
                </div>
                <a id="add-item-to-set" class="btn btn-primary ms-auto float-end mt-2 d-none">Add</a>
            </div>
        </div>


    </div>

</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var productDropdown = document.querySelector("select[id='select-item']");
        var addProductBtn = document.getElementById('add-item-to-set');
        var itemTypeDropdown = document.querySelector('select[name="itemType"]');

        function toggleItemBlockVisibility() {
            var itemTypeValue = itemTypeDropdown.value;
            if(itemTypeValue == "Item-Set") {
                document.querySelector(".item-set-block").style.display = "block";
            } else {
                document.querySelector(".item-set-block").style.display = "none";
            }
        }

        toggleItemBlockVisibility();

        itemTypeDropdown.addEventListener("change", toggleItemBlockVisibility);

        function toggleButtonVisibility() {
            var productId = productDropdown.value; 
            if (productId) {
                addProductBtn.classList.remove("d-none");
            } else {
                addProductBtn.classList.add("d-none");
            }
        }

        toggleButtonVisibility();

        productDropdown.addEventListener("change", toggleButtonVisibility);

        addProductBtn.addEventListener("click", function () {
            var productId = productDropdown.value;
            var selectedOption = productDropdown.querySelector(`option[value="${productId}"]`);

            fetch("/items/item-info", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ productId: productId })
            })
            .then(res => {
                if (!res.ok) {
                    throw new Error("Network response was not ok");
                }
                return res.json();
            })
            .then(data => {
                var productTemplate = document.querySelector("#product-template").content.cloneNode(true);
                var components = document.querySelector(".item-set");

                productTemplate.querySelector(".product-name").textContent = data.name;
                productTemplate.querySelector(".product-description").textContent = data.shortDescription;

                var hiddenInput = document.createElement("input");
                hiddenInput.type = "hidden";
                hiddenInput.name = "components[]";
                hiddenInput.value = productId;

                var newProduct = productTemplate.querySelector(".list-group-item");
                newProduct.appendChild(hiddenInput);

                components.appendChild(productTemplate);

                // Remove the added item from the dropdown
                if (selectedOption) {
                    selectedOption.remove();
                }

                // Hide the add button since nothing is selected now
                toggleButtonVisibility();
            })
            .catch(err => {
                console.error("Error:", err);
                alert("An error occurred while fetching the product data.");
            });
        });


        document.querySelector(".item-set").addEventListener("click", function (event) {
            var deleteBtn = event.target.closest(".delete-product");

            if (deleteBtn) {
                var productItem = deleteBtn.closest(".list-group-item");
                var productId = productItem.querySelector("input[name='components[]']").value;
                var productName = productItem.querySelector(".product-name").textContent;

                // Remove from the list
                productItem.remove();

                // Restore the removed product back to the dropdown
                var newOption = document.createElement("option");
                newOption.value = productId;
                newOption.textContent = productName;
                productDropdown.appendChild(newOption);

                // Hide the add button since nothing is selected
                toggleButtonVisibility();
            }
        });
    })
</script>